import { Row, Col } from 'antd'
import { useState } from 'react';
import styles from '/styles/Panel.module.css'
import IssueDetailsComponent from './IssueDetailsComponent'

const IssueMapComponent = ({ email, id, operationNumber, sentDate, resolvedUploadedImages, state, priority, description, seenDate, setIssuesFunction }) => {
    const [visible, setVisible] = useState(false)
    const apiRequest = { email, id, operationNumber, sentDate, resolvedUploadedImages, state, priority, description, seenDate }
    return (
        <>
            <Row key={id} className={styles.listRows}>
                <Col span={4}>
                    <div className={`${styles.circleSpan}
                    ${styles[`priority-${priority}`]}`} /> {/* hace un circulo del color correspondiente a la prioridad del problema */}
                </Col>
                <Col span={6}>
                    {operationNumber}
                </Col>
                <Col span={6}>
                    {sentDate}
                </Col>
                <Col span={4}>
                    <svg className={styles.icons} onClick={async () => { //borrar problema
                        await fetch('../api/faunaQueries/deleteIssue', {
                            method: 'POST',
                            body: JSON.stringify(apiRequest)
                        })
                        await setIssuesFunction()
                    }}
                        width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path fillRule="evenodd" clipRule="evenodd" d="M10.3158 2.21053V1.47368C10.3158 1.08284 10.1605 0.708001 9.88416 0.431632C9.60779 0.155263 9.23295 0 8.8421 0H4.42105C4.03021 0 3.65537 0.155263 3.379 0.431632C3.10263 0.708001 2.94737 1.08284 2.94737 1.47368V2.21053H0.736842C0.541419 2.21053 0.354001 2.28816 0.215816 2.42634C0.0776313 2.56453 0 2.75195 0 2.94737C0 3.14279 0.0776313 3.33021 0.215816 3.46839C0.354001 3.60658 0.541419 3.68421 0.736842 3.68421H1.47368V11.7895C1.47368 12.3757 1.70658 12.938 2.12113 13.3526C2.53569 13.7671 3.09794 14 3.68421 14H9.57895C10.1652 14 10.7275 13.7671 11.142 13.3526C11.5566 12.938 11.7895 12.3757 11.7895 11.7895V3.68421H12.5263C12.7217 3.68421 12.9092 3.60658 13.0473 3.46839C13.1855 3.33021 13.2632 3.14279 13.2632 2.94737C13.2632 2.75195 13.1855 2.56453 13.0473 2.42634C12.9092 2.28816 12.7217 2.21053 12.5263 2.21053H10.3158ZM8.8421 1.47368H4.42105V2.21053H8.8421V1.47368ZM10.3158 3.68421H2.94737V11.7895C2.94737 11.9849 3.025 12.1723 3.16318 12.3105C3.30137 12.4487 3.48879 12.5263 3.68421 12.5263H9.57895C9.77437 12.5263 9.96179 12.4487 10.1 12.3105C10.2382 12.1723 10.3158 11.9849 10.3158 11.7895V3.68421Z" fill="#121857" />
                        <path d="M4.42114 5.15796H5.89483V11.0527H4.42114V5.15796Z" fill="#121857" />
                        <path d="M7.36841 5.15796H8.84209V11.0527H7.36841V5.15796Z" fill="#121857" />
                    </svg>
                    <svg className={styles.icons} onClick={() => setVisible(!visible)} width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M5.40414 1.05931e-08C6.41027 -6.29694e-05 7.39645 0.280706 8.25165 0.810699C9.10684 1.34069 9.79711 2.09887 10.2447 2.99987C10.6924 3.90087 10.8796 4.90892 10.7853 5.91055C10.691 6.91218 10.319 7.8676 9.71111 8.66927L13.7862 12.744C13.9168 12.8757 13.993 13.0518 13.9995 13.2371C14.0061 13.4225 13.9425 13.6035 13.8214 13.744C13.7003 13.8846 13.5307 13.9743 13.3464 13.9953C13.1621 14.0163 12.9767 13.967 12.8271 13.8573L12.7446 13.7855L8.6695 9.7108C7.98613 10.2288 7.18931 10.5767 6.34486 10.7259C5.50042 10.8751 4.6326 10.8212 3.8131 10.5687C2.9936 10.3162 2.24595 9.87237 1.63192 9.27383C1.01789 8.67528 0.555115 7.93923 0.281822 7.12649C0.00852877 6.31374 -0.0674332 5.44764 0.0602123 4.59974C0.187858 3.75184 0.515446 2.94647 1.01591 2.2502C1.51638 1.55392 2.17535 0.986714 2.93839 0.595444C3.70143 0.204173 4.54662 7.08151e-05 5.40414 1.05931e-08ZM5.40414 1.47386C4.36168 1.47386 3.36191 1.88795 2.62478 2.62502C1.88765 3.3621 1.47353 4.36179 1.47353 5.40417C1.47353 6.44655 1.88765 7.44624 2.62478 8.18332C3.36191 8.92039 4.36168 9.33448 5.40414 9.33448C6.44661 9.33448 7.44637 8.92039 8.18351 8.18332C8.92064 7.44624 9.33475 6.44655 9.33475 5.40417C9.33475 4.36179 8.92064 3.3621 8.18351 2.62502C7.44637 1.88795 6.44661 1.47386 5.40414 1.47386Z" fill="#121857" />
                    </svg>
                    <svg className={styles.icons} onClick={async () => { //
                        await fetch('../api/faunaQueries/changeIssueStatus', {
                            method: 'POST',
                            body: JSON.stringify(apiRequest)
                        })
                        await setIssuesFunction()
                    }} width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M0.0191741 4.84512C0.323422 3.90567 0.823223 3.04133 1.48567 2.30901C1.54042 2.24851 1.61192 2.20563 1.69109 2.18584C1.77026 2.16605 1.85352 2.17023 1.93031 2.19785L3.50961 2.76271C3.62204 2.80286 3.74185 2.81808 3.86075 2.80732C3.97965 2.79655 4.09478 2.76006 4.19818 2.70038C4.30157 2.64069 4.39075 2.55924 4.45953 2.46166C4.52831 2.36408 4.57505 2.25271 4.59651 2.13528L4.89705 0.483515C4.91161 0.403108 4.94976 0.328851 5.00666 0.270198C5.06355 0.211544 5.13661 0.171148 5.21654 0.154151C6.18145 -0.0513836 7.17884 -0.0513836 8.14376 0.154151C8.22369 0.171148 8.29675 0.211544 8.35364 0.270198C8.41053 0.328851 8.44869 0.403108 8.46324 0.483515L8.76461 2.13528C8.78607 2.25271 8.83281 2.36408 8.90159 2.46166C8.97037 2.55924 9.05955 2.64069 9.16294 2.70038C9.26634 2.76006 9.38147 2.79655 9.50037 2.80732C9.61926 2.81808 9.73908 2.80286 9.85151 2.76271L11.4316 2.19785C11.5084 2.17051 11.5915 2.16655 11.6705 2.18648C11.7495 2.20642 11.8209 2.24935 11.8755 2.30984C12.5375 3.04199 13.037 3.90604 13.3411 4.84512C13.3662 4.92269 13.3677 5.00596 13.3454 5.08439C13.3232 5.16281 13.2781 5.23286 13.216 5.28564L11.9356 6.37254C11.8446 6.44984 11.7715 6.54599 11.7214 6.65433C11.6713 6.76267 11.6454 6.88061 11.6454 6.99998C11.6454 7.11935 11.6713 7.23729 11.7214 7.34563C11.7715 7.45397 11.8446 7.55012 11.9356 7.62742L13.216 8.71432C13.2781 8.76711 13.3232 8.83715 13.3454 8.91558C13.3677 8.994 13.3662 9.07728 13.3411 9.15485C13.0371 10.0942 12.5376 10.9586 11.8755 11.6909C11.8207 11.7515 11.7492 11.7943 11.67 11.8141C11.5909 11.8339 11.5076 11.8297 11.4308 11.8021L9.85151 11.2372C9.73908 11.1971 9.61926 11.1819 9.50037 11.1926C9.38147 11.2034 9.26634 11.2399 9.16294 11.2996C9.05955 11.3593 8.97037 11.4407 8.90159 11.5383C8.83281 11.6359 8.78607 11.7472 8.76461 11.8647L8.46242 13.5173C8.44777 13.5974 8.40968 13.6714 8.35295 13.7299C8.29622 13.7884 8.22342 13.8287 8.14376 13.8458C7.17885 14.0514 6.18145 14.0514 5.21654 13.8458C5.13661 13.8288 5.06355 13.7884 5.00666 13.7298C4.94976 13.6711 4.91161 13.5969 4.89705 13.5164L4.59651 11.8647C4.57505 11.7472 4.52831 11.6359 4.45953 11.5383C4.39075 11.4407 4.30157 11.3593 4.19818 11.2996C4.09478 11.2399 3.97965 11.2034 3.86075 11.1926C3.74185 11.1819 3.62204 11.1971 3.50961 11.2372L1.92948 11.8021C1.85273 11.8295 1.76959 11.8334 1.69058 11.8135C1.61157 11.7935 1.54026 11.7506 1.48567 11.6901C0.823598 10.958 0.324084 10.0939 0.0199976 9.15485C-0.00510311 9.07728 -0.00660803 8.994 0.0156736 8.91558C0.0379552 8.83715 0.0830201 8.76711 0.145156 8.71432L1.42556 7.62742C1.51652 7.55012 1.58958 7.45397 1.63969 7.34563C1.68979 7.23729 1.71575 7.11935 1.71575 6.99998C1.71575 6.88061 1.68979 6.76267 1.63969 6.65433C1.58958 6.54599 1.51652 6.44984 1.42556 6.37254L0.145156 5.28564C0.0830201 5.23286 0.0379552 5.16281 0.0156736 5.08439C-0.00660803 5.00596 -0.00510311 4.92269 0.0199976 4.84512H0.0191741ZM5.03374 6.99998C5.03374 7.43675 5.20724 7.85562 5.51608 8.16446C5.82492 8.4733 6.2438 8.6468 6.68056 8.6468C7.11732 8.6468 7.5362 8.4733 7.84504 8.16446C8.15388 7.85562 8.32738 7.43675 8.32738 6.99998C8.32738 6.56322 8.15388 6.14434 7.84504 5.8355C7.5362 5.52667 7.11732 5.35316 6.68056 5.35316C6.2438 5.35316 5.82492 5.52667 5.51608 5.8355C5.20724 6.14434 5.03374 6.56322 5.03374 6.99998Z" fill="#121857" />
                    </svg>
                </Col>
                <Col span={4}>
                    {state}
                </Col>
                {visible && <IssueDetailsComponent key={id} email={email} resolvedUploadedImages={resolvedUploadedImages} description={description} />}
            </Row>
        </>
    )
}
export default IssueMapComponent